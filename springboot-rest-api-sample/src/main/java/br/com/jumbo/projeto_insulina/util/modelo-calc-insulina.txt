

      ----Parametros de entrada-----


public class InsulinCalculationInput {
    private double carbohydrateAmount; // Quantidade de carboidratos em gramas
    private double glucoseLevel; // Nível de glicose no sangue em mg/dL

    // Getters e setters
}




       -------------------------------------------



             Serviço para realizar calculos


@Service
public class InsulinCalculationService {

    // Fator de carboidrato: quantas unidades de insulina por grama de carboidrato
    private static final double CARB_RATIO = 0.5;

    // Fator de sensibilidade à insulina: quantas unidades de insulina por mg/dL de glicose acima do alvo
    private static final double SENSITIVITY_FACTOR = 0.1;

    public double calculateInsulinDose(InsulinCalculationInput input) {
        double carbDose = input.getCarbohydrateAmount() * CARB_RATIO;
        double glucoseCorrection = (input.getGlucoseLevel() - 100) * SENSITIVITY_FACTOR;

        double totalDose = carbDose + glucoseCorrection;

        return totalDose;
    }
}


            --------------------------------------


               Controller para lidar com as cituações







@RestController
@RequestMapping("/insulin")
public class InsulinCalculationController {

    @Autowired
    private InsulinCalculationService insulinCalculationService;

    @PostMapping("/calculate")
    public ResponseEntity<String> calculateInsulinDose(@RequestBody InsulinCalculationInput input) {
        double insulinDose = insulinCalculationService.calculateInsulinDose(input);
        String response = "A dose de insulina a ser aplicada é: " + insulinDose + " unidades.";

        return ResponseEntity.ok(response);
    }
}



           -----------------------------------------------------
LOCAL DATA TIME


import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

@SpringBootApplication
public class MySpringBootApp {

    public static void main(String[] args) {
        SpringApplication.run(MySpringBootApp.class, args);
    }
}

@RestController
class MyController {

    @GetMapping("/formatDate")
    public String formatDate() {
        LocalDateTime currentDateTime = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String formattedDateTime = currentDateTime.format(formatter);
        return "Formatted Date and Time: " + formattedDateTime;
    }
}






